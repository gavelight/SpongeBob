@{
    ViewData["Title"] = "תצוגת סניפים על גבי מפה";
    ViewData["BlueTitle"] = "סניפים על גבי מפה.";

}

<script src="http://maps.google.com/maps/api/js?key=AIzaSyCij6Yc19nHcMJNb63ioB4yYgy3N6CH5aU" type="text/javascript"></script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>

<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 1000px; margin-top: 0px"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {

        // Set the margin bottom of the blue wrap
        $('#blue').css("margin-bottom", "0px");

            Initialize();
        });

    // Create the Google map
    function Initialize() {

        // Set Israel as the center of the map
        var Israel = new google.maps.LatLng(31.046051, 34.851612);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 8,
            center: Israel,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // Create the geocoder object
        var geocoder = new google.maps.Geocoder();

        // Get the branches data from the controller, in JSON format
        var branchesData = @Html.Raw(Json.Serialize(Model));

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(branchesData, function (i, item) {

            // Initiate a request to the Google geocoding service to get the location of the branch by the address
            geocoder.geocode({'address': item.address}, function(results, status) {
                
                // Set marker in the relevant location on the map
                var marker = new google.maps.Marker({
                    'position': results[0].geometry.location,
                    'map': map,
                    'title': item.name
                });

                // Make the marker-pin blue
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                // Put in some information about each JSON object - branch's name. address and phone number
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2><u><center>" + item.name + "</h2></u></center>" + "<h3><center>" + item.address + "<br>" + item.phoneNumber + "</h3></center>" + "</div></div>"
                });

                // Finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
            });
        })
    }
        </script>
    </section>
}
