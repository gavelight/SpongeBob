@{
    ViewData["Title"] = "גרפים מכירות";
    ViewData["BlueTitle"] = "סטטיסטיקת מכירות.";
}

<div class="container mtb">
    <div class="row centered">
        <div class="col-md-6">
            <h3>כמות מכירות לפי סוג פיצה</h3>
            <br />
            <svg id="barChart"></svg>
        </div>
        <div class="col-md-6">
            <h3>יחס ביצוע מכירות בין סניפים</h3>
            <br />
            <div id="chart"></div>
            @*<div id="ChartAccessAgesByCountD3" style="height:450px; width:500px" data-drilldown-destination="filelist_by_category" data-drilldown-key="atime"></div>*@
        </div>
    </div>
</div>

@*Bar chart*@
<script>
    d3.json("/Sales/GetBarGraphData", function (data) {
        var margin = {
            top: 20,
            right: 20,
            bottom: 70,
            left: 250
        },
        width = 850 - margin.left - margin.right,
        height = 450 - margin.top - margin.bottom;

        var x = d3.scale.ordinal()
        .rangeRoundBands([width, 0], 0.1);

        var y = d3.scale.linear()
        .range([0, height]);

        var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom");

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left")
            .tickFormat(d3.format("d"))
            .tickSubdivide(0);


        var svg = d3.select("svg#barChart")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        x.domain(data.map(function (d) {
            return d.product;
        }));

        y.domain([d3.max(data, function (d) {
            return d.count;
        }), 0]);

        svg.append("g")
        .attr("class", "y axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .selectAll("text")
        .attr("transform", "rotate(0)")
        .attr("x", 25)
        .attr("y", 15)
        .attr("dx", ".6em")
        .style("text-anchor", "start");

        svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

        svg.selectAll(".bar")
        .data(data)
        .enter().append("rect")
        .attr("class", "bar")

        .attr("x", function (d) {
            return x(d.product);
        })
        .attr("width", x.rangeBand())
        .attr("y", function (d) {
            return y(d.count);
        })
        .attr("height", function (d) {
            return height - y(d.count);
        });

    });
</script>

@*Pie chart*@
<script>
    var w = 400;
    var h = 400;
    var r = h / 2;
    var color = d3.scale.linear().domain([0, 5]).range(['#00b3fe', 'steelblue']);
        
    d3.json("/Sales/GetPieGraphData", function (data) {

        var vis = d3.select('#chart').append("svg:svg").data([data]).attr("width", w).attr("height", h).append("svg:g").attr("transform", "translate(" + r + "," + r + ")");
        var pie = d3.layout.pie().value(function (d) { return d.value; });

        // declare an arc generator function
        var arc = d3.svg.arc().outerRadius(r);

        // select paths, use arc generator to draw
        var arcs = vis.selectAll("g.slice").data(pie).enter().append("svg:g").attr("class", "slice");
        arcs.append("svg:path")
            .attr("fill", function (d, i) {
                return color(i);
            })
            .attr("d", function (d) {
                // log the result of the arc generator to show how cool it is :)
                console.log(arc(d));
                return arc(d);
            });

        // add the text
        arcs.append("svg:text").attr("transform", function (d) {
            d.innerRadius = 0;
            d.outerRadius = r;
            return "translate(" + arc.centroid(d) + ")";
        }).attr("text-anchor", "middle").text(function (d, i) {
            return data[i].label;
        });
    });
</script>